@using System.Security.Claims;
@model IEnumerable<Inveni.Models.TematicaMestre>
@{
    ViewData["Title"] = "Home";
}



    <div class="row">
        <!-- ... Código anterior ... -->
        <div class="container paddingb">
            <div class="row">
                <div class="text-center pt-3 new-font">
                    <h1>Encontre o melhor Mestre para você!!</h1>
                </div>

            </div>
        </div>

        <form id="filtroForm" asp-action="Filtrar" method="post">
        <div id="filtroBox">
            @{
                await Html.RenderPartialAsync("_Dropdowns", new Inveni.ViewModel.FiltrarViewModel());
            }
            <div class="row">
                <div class="col-12 mt-3 mb-3 align-items-end text-start">
                    <div class="input-group">
                        <input type="text" class="form-control" id="searchTerm" name="searchTerm" placeholder="Buscar..." value="@ViewBag.SearchTerm">
                    </div>
                </div>
                <div class="col-12 mb-3">
                    @if (User.Identity.IsAuthenticated && User.Claims.First(c => c.Type == "Permissoes").Value == "3")
                    {
                        <div id="filtroBotoes">
                            <a asp-action="Index" asp-controller="Home" class="btn btn-primary rounded-pill">Todos</a>
                            <button type="submit" name="favoritos" value="true" class="btn btn-primary rounded-pill">Favoritos</button>
                            <button type="submit" name="matriculado" value="true" class="btn btn-primary rounded-pill">Matriculado</button>
                            <button type="submit" name="pendente" value="true" class="btn btn-primary rounded-pill">Aguardando</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </form>


    </div>



    <div class="row mt-3">

        @if(Model.Any())
    {
        @foreach (var item in Model)
        {
            <div class="col-md-3 mb-3">
                <div class="card d-flex flex-column h-100" style="transition: box-shadow 0.9s ease-in-out;">
                    @if (item.Usuario.Ativo)
                    {
                        <div class="mt-auto card-header d-flex justify-content-start text-white header-azul ">
                            <span>
                                @Html.DisplayFor(modelItem => item.Tematica.Descricao)
                            </span>
                        </div>
                    }
                    else
                    {
                        <div class="mt-auto card-header d-flex justify-content-start bg-danger text-white">
                            <span>Inativo</span>
                        </div>
                    }
                    <div class="card-body">
                        <div class="text-center">
                            @* <h5 class="card-title mb-2">
                    <div style="display: flex; flex-direction: column; align-items: center;">
                    <span id="statusMatricula_@item.Id"></span>
                    <img src="@Url.Content(item.Usuario.CaminhoFoto)" alt="User Icon" style="width: 100px; height: 100px; border-radius: 50%;" />
                    <span>@Html.DisplayFor(modelItem => item.Usuario.Nome)</span>
                    </div>
                    </h5>
                    *@
                            <div style="display: flex; flex-direction: column;" class="mb-2">
                                <div style="display: flex; justify-content: space-between; align-items: center;">
                                    <span id="statusMatricula_@item.Id" style="font-size: 0.9em;"></span>
                                    <button id="botaoMatricular_@item.Id" class="btn btn-primary botaoMatricular" style="display: none; font-size: 0.9em; padding: 0.2em;"
                                            data-item-id="@Convert.ToInt32(@item.Id)" data-aprendiz-id="@Convert.ToInt32(User.Identity.Name)">
                                        Matricular
                                    </button>
                                    <span id="statusFavoritado_@item.Id" style="font-size: 1.2em;"></span>
                                </div>
                            </div>
                            <div style="display: flex; flex-direction: column; align-items: center;">
                                <img src="@Url.Content(item.Usuario.CaminhoFoto)" alt="User Icon" style="width: 100px; height: 100px; border-radius: 50%;" />
                                <span style="text-align: right;">@Html.DisplayFor(modelItem => item.Usuario.Nome)</span>
                            </div>

                        </div>
                        @if (User.Identity.IsAuthenticated)
                        {
                            var idUsuario = User.FindFirst(ClaimTypes.Name)?.Value;
                            var permissoes = User.Claims.First(c => c.Type == "Permissoes").Value;

                            @*if (!string.IsNullOrEmpty(idUsuario) && permissoes == "3")
                {
                int idUsuarioInt = Convert.ToInt32(idUsuario);

                // Verifica se o tema já foi favoritado pelo aprendiz

                bool favoritado = item?.Favoritos?.Any(f => f.AprendizId == idUsuarioInt && f.TematicaMestreId == item.Id) ?? false;

                <button class="btn btn-primary" onclick="favoritarDesfavoritar(this, '@item.Id', '@idUsuarioInt', '@favoritado')">@(favoritado ? "Favoritado" : "Favoritar")</button>

                }*@
                        }
                        <p class="card-subtitle mb-2 mt-2 text-muted">
                            Categoria: @Html.DisplayFor(modelItem => item.Tematica.Categoria.Descricao)
                        </p>
                        <p class="card-subtitle mb-2 text-muted">Modelo: @Html.DisplayFor(modelItem => item.Modelo.Descricao)</p>
                        <div class="accept-policyaccept-policy mt-2" style="text-align:justify;">
                            <p class="card-text" id="biografia">
                                @Html.DisplayFor(modelItem => item.Biografia)
                            </p>
                        </div>
                    </div>
                    <div class="mt-auto card-footer d-flex justify-content-center" style="border:none;">
                        @*<button class="btn btn-primary" onclick="saibaMais('@item.Id')">Saiba Mais</button>*@

                        <button class="btn btn-outline-primary" onclick="abrirModal('@item.Id')">Saiba Mais</button>


                        @*Aqui vou prototipar o botao de matricular - depois o leon ajusta*@

                        @if (User.Identity.IsAuthenticated && User.Claims.First(c => c.Type == "Permissoes").Value == "3")
                        {


                            <script>
                                document.addEventListener("DOMContentLoaded", function () {
                                    // Chama a função verificarMatriculaWrapper ao carregar a página
                                    verificarMatriculaWrapper(@item.Id, @Convert.ToInt32(User.Identity.Name));

                                    //Verifica Favoritados
                                    verificarFavoritados(@item.Id, @Convert.ToInt32(User.Identity.Name));

                                    // Função para manipular a matrícula quando o botão é clicado
                                    function solicitarMatriculaButton() {
                                        var idTematicaMestre = $(this).data('item-id');
                                        var idAprendiz = $(this).data('aprendiz-id');


                                        // Chama a função para solicitar a matrícula
                                        solicitarMatricula(idTematicaMestre, idAprendiz);
                                    }

                                    // Adicionar evento de clique para o botão de matrícula
                                    $('#botaoMatricular_@item.Id').click(function () {
                                        solicitarMatriculaButton.call(this); // Garante que o contexto do this seja mantido
                                    });
                                });

                            </script>

                        }



                    </div>
                    <style>
                        .card:hover {
                            box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1);
                        }
                    </style>

                    @*<div class="mt-auto card-footer d-flex justify-content-end">

            <a asp-action="Edit" asp-route-id="@item.Id" class="mx-3">
            <img width="20" height="20" src="https://img.icons8.com/ios-glyphs/30/0d6efd/edit--v1.png" alt="edit--v1" />
            </a>
            |
            <a asp-action="Delete" asp-route-id="@item.Id" class="mx-3">
            <img width="20" height="20" src="https://img.icons8.com/ios-filled/50/0d6efd/waste.png" alt="filled-trash" />
            </a>
            </div>*@
                </div>
            </div>
        }
    }
    else
        {
            <div class="col-md-12 text-center">
                <h3>Sem resultados encontrados</h3>
            </div>
        }
   


    </div>
    <!-- Modal -->

<div class="modal fade" id="infoModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header header-azul text-black">
                <h5 class="modal-title" id="exampleModalLabel">Mestre</h5>
                <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalBody">
                <!-- Conteúdo do modal será preenchido dinamicamente -->
            </div>
        </div>
    </div>
</div>
@*<link rel="stylesheet" href="https://cdn.datatables.net/2.0.3/css/dataTables.dataTables.css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
<script src="https://cdn.datatables.net/2.0.3/js/dataTables.js"></script>*@

<script type="text/javascript">
    var js = jQuery.noConflict(true);
</script>
<script>
    function toggleFiltro() {
        var filtroBox = document.getElementById('filtroBox');
        if (filtroBox.style.display === 'none') {
            filtroBox.style.display = 'block';
        } else {
            filtroBox.style.display = 'none';
        }
    }
</script>
<script>
    var isUserAuthenticated = @(User.Identity.IsAuthenticated.ToString().ToLower());
    function abrirModal(id) {
        // Verificar se o usuário está autenticado

        if (!isUserAuthenticated) {
            // Redirecionar para a tela de acesso
            window.location.href = '@Url.Action("Acesso", "Usuarios")';
        } else {
            // Se estiver autenticado, continuar com a lógica para abrir o modal
            // Faça uma requisição AJAX ou manipule os dados diretamente, dependendo do que preferir
            $.ajax({
                url: '/Home/Detalhes/' + id, // Substitua pelo caminho real da sua action Detalhes
                type: 'GET',
                success: function (data) {
                    // Preencha o conteúdo do modal com os dados retornados pela action
                    $('#modalBody').html(data);
                    // Abra o modal
                    $('#infoModal').modal('show');
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }
    }
</script>

<script>
    function verificarMatriculaWrapper(id, aprendizId) {
        verificarMatricula(id, aprendizId);

    }

    function verificarFavoritados(id, idAprendiz) {
        if (isUserAuthenticated) {
            $.ajax({
                url: '@Url.Action("VerificarFavoritado","Home")',
                type: 'POST',
                data: { id: id, idAprendiz: idAprendiz },
                success: function (response) {
                    var statusElement = $('#statusFavoritado_' + id);
                    var botaoFavoritarElement = $('#botaoFavoritar_' + id);

                    if (response.status === 0) {
                        botaoFavoritarElement.show();
                        statusElement.html('<i class="fa fa-star" style="color: gold; cursor: pointer;" onclick="desfavoritar(' + id + ', ' + idAprendiz + ')"></i>').show();
                        //statusElement.html('<button type="button" class="btn btn-link" style="color: gold;"><i class="fa fa-star"></i></button>').show();
                    } else {
                        botaoFavoritarElement.show();
                        statusElement.html('<i class="fa fa-star-o" style="color: gray; cursor: pointer;" onclick="favoritar(' + id + ', ' + idAprendiz + ')"></i>').show();
                    }
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }
    }

    function verificarMatricula(id, idAprendiz) {
        if (isUserAuthenticated) {
            $.ajax({
                url: '@Url.Action("VerificarMatricula", "Home")',
                type: 'POST',
                data: { id: id, idAprendiz: idAprendiz },
                success: function (response) {
                    var statusElement = $('#statusMatricula_' + id);
                    var botaoMatricularElement = $('#botaoMatricular_' + id);

                    if (response.status === 0) {
                        botaoMatricularElement.hide();
                        statusElement.html('<span style="color: green; display: flex; align-items: center; justify-content: flex-end;"><i class="fa fa-check"></i>&nbsp;Matriculado</span>').show();
                    } else if (response.status === 1) {
                        botaoMatricularElement.hide();
                        statusElement.html('<span style="color: orange; display: flex; align-items: center; justify-content: flex-end;"><i class="fa fa-clock-o"></i>&nbsp;Aguardando</span>').show();
                    } else {
                        botaoMatricularElement.show();
                        statusElement.hide();
                    }
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }
    }



    function solicitarMatricula(idTematicaMestre, idAprendiz) {
        $.ajax({
            url: '@Url.Action("SolicitarMatricula", "Home")',
            type: 'POST',
            data: { idAprendiz: idAprendiz, idTematicaMestre: idTematicaMestre },
            success: function (response) {
                if (response.status == 1) {
                    verificarMatricula(idTematicaMestre, idAprendiz);
                } else {
                    console.error(response.error);
                }
            },
            error: function (error) {
                console.error(error);
            }
        });
    }
    function favoritar(idTematicaMestre, idAprendiz) {
        $.ajax({
            url: '@Url.Action("FavoritarTematicaMestre", "Home")',
            type: 'POST',
            data: { idAprendiz: idAprendiz, idTematicaMestre: idTematicaMestre },
            success: function (response) {
                if (response.status == 0) {
                    verificarFavoritados(idTematicaMestre, idAprendiz);
                } else {
                    console.error(response.error);
                }
            },
            error: function (error) {
                console.error(error);
            }
        });
    }
    function desfavoritar(idTematicaMestre, idAprendiz) {
        $.ajax({
            url: '@Url.Action("DesfavoritarTematicaMestre", "Home")',
            type: 'POST',
            data: { idAprendiz: idAprendiz, idTematicaMestre: idTematicaMestre },
            success: function (response) {
                if (response.status == 0) {
                    verificarFavoritados(idTematicaMestre, idAprendiz);
                } else {
                    console.error(response.error);
                }
            },
            error: function (error) {
                console.error(error);
            }
        });
    }
</script>
<script>
    $(document).ready(function () {
        // Verifica se a página foi recarregada após um filtro de favoritos
        var urlParams = new URLSearchParams(window.location.search);
        if (urlParams.has('favoritos')) {
            $('#filtroBotoes button[name="favoritos"]').hide();
            $('#filtroBotoes button[name="todos"]').show();
        } else {
            $('#filtroBotoes button[name="favoritos"]').show();
            $('#filtroBotoes button[name="todos"]').hide();
        }
    });
</script>

@*<script>
 
    // Captura mudanças nos selects
    $('#CategoriaId, #TematicaId, #ModeloId').change(function () {
        submitForm();
    });

    // Captura mudanças no campo de busca
    $('#searchTerm').keyup(function () {
        submitForm();
    });



    function submitForm() {
        // Submete o formulário
        $('#filtroForm').submit();
    }


</script>*@
<script>
    var typingTimer;                // Timer para atraso
    var doneTypingInterval = 800;   // Tempo em milissegundos para esperar após digitação (500ms neste exemplo)
    var $searchTerm = $('#searchTerm');

    // Captura mudanças nos selects
    $('#CategoriaId, #TematicaId, #ModeloId').change(function () {
        submitForm();
    });

    // Captura mudanças no campo de busca
    $searchTerm.keyup(function () {
        clearTimeout(typingTimer);
        typingTimer = setTimeout(submitForm, doneTypingInterval);
    });

    // Limpa o timer se o usuário ainda estiver digitando
    $searchTerm.keydown(function () {
        clearTimeout(typingTimer);
    });

    function submitForm() {
        // Submete o formulário
        $('#filtroForm').submit();
    }
</script>




@*<script>
    var isUserAuthenticated = @(User.Identity.IsAuthenticated.ToString().ToLower());

    function filtrarFavoritos() {
        var btnFiltrar = $('#btnFiltrarFavoritos');
        alert ("Chegou no filtrar favoritos");
        if (btnFiltrar.hasClass('btn-dark')) {
            // Desfazer a filtragem de favoritos
            desfazerFiltragemFavoritos();
        } else {
            // Filtrar favoritos
            var idAprendiz = '@User.Identity.Name';
            $.ajax({
                url: '@Url.Action("Filtrar", "Home")',
                type: 'POST',
                data: { idAprendiz: idAprendiz },
                success: function () {
                    // Recarregar a página após filtrar os favoritos
                    location.reload();
                },
                error: function (error) {
                    console.error(error);
                }
            });
        }
    }

    function desfazerFiltragemFavoritos() {
        // Implemente a lógica para desfazer a filtragem de favoritos se necessário
        location.reload(); // Aqui você pode ajustar conforme a lógica da sua aplicação
    }
</script>*@


